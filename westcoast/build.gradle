import edu.wpi.first.gradlerio.GradleRIOPlugin

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.5.21"
    id "java"
    id "edu.wpi.first.GradleRIO" version "2021.3.1"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

def ROBOT_MAIN_CLASS = "frc.robot.MainKt"

deploy {
    targets {
        roboRIO("roborio") {
            team = frc.getTeamOrDefault(4186)
        }
    }
    artifacts {
        frcJavaArtifact('frcJava') {
            targets << "roborio"
            // Debug can be overridden by command line, for use with VSCode
            debug = frc.getDebugOrDefault(false)
        }

        // Built in artifact to deploy arbitrary files to the roboRIO.
        fileTreeArtifact("frcStaticFileDeploy") {
            // The directory below is the local directory to deploy
            files = fileTree(dir: "src/main/deploy")

            // Deploy to RoboRIO target, into /home/lvuser/deploy
            targets << "roborio"
            directory = "/home/lvuser/deploy"
        }
    }
}

dependencies {
    implementation wpi.deps.wpilib()
    nativeZip wpi.deps.wpilibJni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.wpilibJni(wpi.platforms.desktop)


    implementation wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    // We need to add the Kotlin stdlib in order to use most Kotlin language features.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.21'

    simulation wpi.deps.sim.gui(wpi.platforms.desktop, false)
}

jar {
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)
}

sim {
    // Sets the websocket client remote host.
    // envVar "HALSIMWS_HOST", "10.0.0.2"
}

repositories {
    maven {
        url "https://repo.maven.apache.org/maven2"
        name "Maven Central"
    }
}
